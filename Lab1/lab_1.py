# -*- coding: utf-8 -*-
"""Lab_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JSacmDf4lT6BClDf5js0EZNcdE-Nrq-D

# **LAB 1**
> Name          : Rameez Anwar

> Reg No        : B22F0150AI102

> Lab Instructor: Ms. Aneela Habib

# **1. Differentiate between assignment operator and equality operator:**

* Assignment operator (“=”): It is used to assign a value to a variable. For example, x = 5 assigns the value 5 to the variable x.

* Equality operator (“==”): It is used to compare two values for equality. For example, x == 5 checks if the value of x is equal to 5.

# **2. Explore all kinds /data types of variables. And  write code for each datatype.**
"""

# Integer variable: Whole number without any fractional part.
x = 5
print(type(x))

# Floating-point variable : A number with a fractional part.
y = 3.14
print(type(y))

# String variable:Sequence of characters
z = "Rameez Anwar"
print(type(z))

# Boolean variable: Represents a logical value and hold either true or false
a = True
print(type(a))

"""# **3.	Explain the rules for variables name and use different variables name including special characters , numbers etc**

* Variable names must start with a letter or the underscore character.
* Variable names can only contain letters, numbers, and underscores (A-z, 0-9, and _).
* Variable names cannot start with a number.
* Variable names are case-sensitive. For example, x and X are two different variables.
* Reserved words cannot be used as a variable name.
"""

#invalid variable name
@n="Rameez"
 9age=19
print(@name)
print(9age)

"""# **4.	Declare and initialize multiple variables in a single line . Single variable with multiple values , multiple variables with single values. Each having at least two examples**"""

# Single variable with multiple values
name= "Rameez","Ahmed","Ali";
print(name)

score=10,122,144;
print(score)

#multiple variables with single values
x, y, z = 10, 20, 30
print(x,y,z)

name, city, country = "Rameez", "Abbottabad", "Pakistan"
print(name,city,country)

"""# **5. Perform arithmetic operations on integers and floating-point numbers**

  * Adding, Subtracting, Multiplication and dividing two integer variables
  * Adding, Subtracting, Multiplication and dividing  floating-point variables

"""

# Adding, Subtracting, Multiplication and dividing two integer variables
a = 5
b = 3
print(a + b)
print(a - b)
print(a * b)
print(a / b)

# Adding, Subtracting, Multiplication and dividing floating-point variables
x = 3.14
y = 2.71
print(x + y)
print(x - y)
print(x * y)
print(x / y)

"""# *** 6. A string literal is a sequence of characters enclosed in quotes. In Python, we can use either single quotes (‘…’) or double quotes (“…”) to create a string. ***               
  * Using single quotes
  * Using double quotes
  * Using double quotes when the string contains a single quote
  * Using single quotes when the string contains double quotes
"""

# Using single quotes
s1 = 'Hello, World!'
print(s1)

# Using double quotes
s2 = "Hello, World!"
print(s2)

# Using double quotes when the string contains a single quote
s3 = "It's a beautiful day"
print(s3)

# Using single quotes when the string contains double quotes
s4 = 'He said, "Hello, World!"'
print(s4)

"""# **7.	The print() function is a built-in function in Python that allows you to output variables and other data to the console.**
  * Example of using the print() function to output a variable
  * Example of outputting multiple variables with print()
  * Example of using f-strings to format output
  * Example of using f-strings to manipulate variables in output

"""

# Example of using the print() function to output a variable
x = 5
print(x)

# Example of outputting multiple variables with print()
x = 5
y = 3
print(x, y)

# Example of using f-strings to format output
name = "Ali"
age = 21
print(f"Hello, {name}! You are {age} years old.")

# Example of using f-strings to manipulate variables in output
x = 5
y = 3
print(f"The sum of {x} and {y} is {x + y}.")